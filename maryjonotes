Suggestions for next election:
1) Have a data-savvy reporter available at 6 am morning after election to help re-write web stories
2) Be better prepared for the day-after visualization (like the 13 key takeaways Jeff did, but didn't publish until Friday)
http://www.startribune.com/13-takeaways-from-the-presidential-election-in-minn-nationwide/400722341/
3) On the main results dataviz, need to do rough prototypes before building. 
4) Be better prepared for a state legislature analysis; have demographic and voting history data on districts (or their main county?) at the ready
to be able to do analysis along the lines of "counties that voted for Trump in 2016, flipped back to Democratic control" or "more suburban counties
became GOP than ever before"
5) Be pepared to do national and county-level(IN MN) turnout analysis quickly after election
6) Get absentee voting ballot data on weekly basis (also get finalized 2016 absentee voting data to have as comparison). Be sure to get voter 
registration data as close to absentee voting time to be able to marry them together 


What we did in 2016:
These notes are going to focus on the data analysis, primarily on the day after the election and beyond. The "results" were all displayed 
using the D3 dataviz built by Jeff Hargarten, including many of the print graphics that were imaged from his dataviz and repurposed
in print. 

We decided that the focus of the post-election analysis would be on the Presidential election and the control of the state legislature. We didn't 
have a governor's race, nor any U.S. Senate races. We talked about analysis on the congressional races, but didn't end up getting around to that 
partly due to lack of time on my part and partly due to lack of interest/need from the reporters.

Prior to the election I pulled together historical results for all the presidential elections going back to 1992. I got precicnt level data 
and then summarized up to county level, as well. I also collapsed results for congressional races and state house races.
In the file called "electionsSince1992_Precincts_MajorRaces" there  are up to 5 rows for each precinct in each of the presidential years -- one for
presidential race, one for US Senate (if there were races), one for US Congress, one for State senate and one for State House. It doesn't 
show names of winners, just has breakdown of votes into Republican, Democrat and other.

The older elections data came from GIS shapefiles that the legislature's GIS department built and I found some problems with them, but the GIS office
said the problem stemmed from the original data from sec of state's office and they couldn't resolve it. (I found a few precincts
where the vote totals were clearly incorrect, especially in Hennepin county)

The newer elections data came from the Sec of State's office, based on their "precinct spreadsheets"; these have one record for each precinct
and then multiple columns for each of the major races (president, MN house, US Congress, US Senate, etc). I decided to normalize
my data so that it's one row for each race (multiple rows for each precinct), so then it would be easier to collapse or summarize
or just filter to what I wanted. 

I assigned each county to a region:
Hennepin/Ramsey counties
Rest of 7 county (Dakota, Anoka, Washington, Scott, Carver)
Outer suburbs (the rest of the official MSA - Rice, Benton, Chisago, Goodhue, Isanti, Le Sueur, Mille Lacs, Wright, McLeod, Sherburne, Sibley.)
Rochester-St. Cloud-Duluth -- this is the 3 counties where the big cities are located - Stearns, St. Louis and Olmsted
Outstate -- everything else

I also assigned each county to a category based on it's share of the voting age population. So Hennepin and Ramsey fall into the "Extra large" 
category, then it drops down from there. 

The winner in each precinct is also assigned a "lean" code based on their strength of victory. A margin of victory that is more than 20% is a 4, 
10 percent and up is a 3, 6% and up is a 2 and below that is 1.

One of the big problems I ran into was assigning precincts to minor civil divisions (MCD), especially in the older years. I was able to get the
matching MCD tables from those earlier years, but there were far too many that didn't match up. 

-----------------------------------------

Lack of local candidates story (published before the election):
I used the "local" results files from the SOS where it has one record for each candidate (including write-in) in each race. The ones where it's just
one position (like mayor) were easy because I just had to calculate how many records there were for that race, subtract off the write-in
and you had the number of candidates. But the ones where it was "elect 2" or "elect 3" were trickier. 

From the database, I spit out a list of offices and the number of candidates (with write-in) and put that in Excel. Then I created a new column
called "num cand" where I subtracted 1 from the number of candidates (with write-in). Then I created a field to count the number of
seats available.

I built a formula in Excel to look for the "elect 2" or "elect 3" in the office title and ccalculate the number of seats accordingly:
IF(ISERROR(SEARCH("*elect 2*",A2,1)>0)=FALSE,2,IF(ISERROR(SEARCH("*elect 3*",A2,1)>0)=FALSE,3,""))

Then I subtracted the number of seats from the number of candidates. A negative number meant there were not enough candidates. 

Then we did just a little analysis to figure out number of seats without any candidates, number of uncontested seats (where number of seats
and number of candidates matched) and then number of contested seats. Keep in mind that this is based on "seats" not really "races" because
of how the SOS treats these "elect 2" and "elect 3" races. 

I did this analysis for 2012, 2014 and 2016 so we could show that this problem isn't new. 


------------------------------------------------------
Converting SOS data to something useful:

The election results files from Sec of State come with one record per candidate -- not office -- and it doesn't flag which person is leading or has won.
So that needs to be done as part of the analysis. And for most of our needs, partiuclarly mapping, we want one record per geography/race and not
multiple records. 

For 2016, I used SQL Server to store and pull out the data, but SQL is not ideal for pivoting the data in the way we need. I've saved all the 
queries that I wrote, for both this year's data and for previous years, however most of those queries won't work in MySQL when
we make the switch. The key thing I used is a SQL Server function called PIVOT that allowed me to flip around the results based on the 
party field (democrat, republican, etc). apparently that isn't available in MySQL, although there are some similar approaches such as this one:
http://stackoverflow.com/questions/7674786/mysql-pivot-table

I didn't import all the SOS files into SQL Server, but I have saved them in the D drive on stncar. Some files from earlier elections are also 
there, however, they are mostly ones that I imported. 

Also on stncar are the import specs and Visual Studio packages that I used for bringing in data and then exporting analysis results. All of that is
documented below, however if we are switching to mySQL, it won't be much good for the next election. I'm saving it anyway
just as documentation for the process that I built, anticipating that I will have to rebuild a similar process for future elections. 

I would like to find a better solution to pivoting the data and/or identifying the winner. I wonder if there's a way to do it programmatically
in Python or something before you even bring it into the server? 

Note: Precinct level results were available for select files starting at 6 a.m. the day after the election, including the
presidential results by precinct; the "all races by precinct" file wasn't available until later in the morning.

I exported results to Excel files in my S drive folder so that reporters, Ray Grumney, Jeff and others could access those files.




DETAILS-------------------------------------------------------


Filezilla:
ftp.sos.state.mn.us
media
results


download all text files from 20161108 folder
put in  D:\election_results\SOS2016
-------------------------------------------------------------------

______________________________________________________________________


Visual Studio:
Open "electionresults_precinct package"
D:\election_results\ElectionResults_Precinct
* There are separate tabs (packages) for importing various datasets

Imports that will have reliable data on election night:
--these are packaged together in "CountyDistrictLevel.dtsx" (be sure to rename the results files before running)
House
Senate
county level 2016 (allracesbycounty)

Imports that will have reliable data after 6 a.m. day after election:
--these are packaged together in "PrecinctLevel1.dtsx"
--stsenatepct
--sthousepct
--import prez precinct
--us house precinct


Imports that can be run after 9 a.m. day after election:
--precinct level 2016 (this is the allraces table)



---------------------------------------------------------
Data tables that will be updated:
--these are all in the news_sandbox3 on stsqlnewsusr server

elex_prez_pct_2016
elex_sthouse_2016
elex_sthouse_pct_2016
elex_stsenate_2016
elex_stsenate_pct_2016
elex_ushouse_pct_2016
elex_allraces_cty_2016
elex_allraces_pct_2016

------------------------------------------------------------------------------


Analysis:
Battle for the house/senate -- what happened? 
--At the district level, the import process spits out a results file (sends it to my S drive folder) called "elex2016_mnleg.xls" that the
reporters can access. It shows results for each senate and house district (two worksheets) and then includes our battle index info 
and past election info for comparison. 
--look for shifts in geography
--look carefully at rural places with heavy immigrant communities -- think those will shift parties
--GRAPHIC -- power bars and maps showing which districts flipped; IN THE DATA FILE, need to add "flip" field that plots the change for Ray
(i.e. "GOP-GOP" or "GOP-DFL")
--overall power balance
--which seats flipped
--note: race where candidate was disqualified



County-level presidential results 
--The import process spits out a results file (sends it to my S drive folder) called "elex2016_county_prez.xls" that the reporters can access.
It shows this year's results for each county, plus the 2012 results and some info on the county (region, voting pop share, number of DFL vs GOP wins in 
past six elections, etc)
--after this drops into the S Drive, need to go in there and add the formula columns (formulas stored in my Z drive folder) and then look
to see if there's any other analysis to add to it before sending to reporters.
-Compare Clinton's results to Obama's 2012 results; compare Trump results to Romney's 2012 results
-how strong was Dem support in traditionally democratic places; how strong in places where Republicans dominate?
--look at votes for other candidates and how that compares to past elections
--GRAPHIC
--Excel file called "county demographics" has Census data


county level votes cast and turnout results
--"voting and downballot" Excel file in Election2016 directory is set up with 2012 data and formulas; need to add the number of votes cast
in 2016 presidential and Congressional races in each county. That gets exported from database in "elex2016_votescast_county"
--what county had greatest increase in voters?
--what share of voters didn't vote down ballot and how does that compare to 2012?
--were there any counties with more congressional votes than presidential votes?
--what share of registered voters turned out? 


Ticket-splitting analysis: (we didn't end up using this)
--ticketsplitting_qry2 summarizes votes for congress and president in each congressional district; need to copy this out to Excel to figure 
out winners and win percentages and margin; then compare back to pre-election (excel file - ticketsplitting cg 2012)
--ticketsplitting_qry1 has results at the precinct level; might be useful to find places that have very big divide



Presidential precinct analysis:
--3 saved queries-- prez_pct_qry1, prez_pct_qry2 and prez_pct_qry3 --- restructure the data, add the precinct info (VTD number, what leg district, what cong dist) and also 
add info about the county where it's located (region, voting history in prez race)
--the "winner" field simply populates "other" if any of the third party candidates win that precinct. Will need to deal with that if we've got any of those situations
--prez_pct_qry3 could be exported and put into a map since it has the VTD number attached
--VISUAL STUDIO PACKAGE --as part of the import for the presidential race by precinct file, it also exports the prez_pct_qry3 to the S drive folder;
into an Excel file called "elex2016_prez_precinct.xls"
--could analyze this up to the MCD level


Precinct-level results for congressional districts
--especially need CG2 and 3 for print graphics
--saved queries -- ushouse_pct_qry1, ushouse_pct_qry2 and ushouse_pct_qry3
--query called "ushouse_compare_to_2012" marries county-level results from 2012 to 2016 for each congressional race; download this to run 
quick analysis on where voters shifted allegiences within each congressional district. 
--The import process for this data includes an export of the "ushouse_compare_to_2012" query and drops it in the S drive folder; and an
export of the ushouse_pct_qry3 for analysis or mapping of precinct-level data (Ray Grumney needs this, in particular)




 National presidential results by county:
--got shapefiles from 2012 and 2008 from USGS (on data.gov) with county-level results for presidential race (they are in PastElections folder)
--I pulled out the 2012 data into a spreadsheet that is in my S drive folder, as well
--field called "group" puts them into buckets based on the strength of the win and whether it was Obama or Romney. So for example group 15 is where Obama won by the largest margins; group 25 is where Romney
won by the largest margins; Minnesota doesn't have any counties that were on the high end for either candidate; most were in the middle ("12" for Obama and "22" for Romeny were the big ones, which are winning
percentages averaging around 54 or 55%)
--Jeff is going to spit out the 2016 county-level results for nation from the AP feed -- Democrat votes, GOP votes and the third-place candidate (just in case we have counties where 3rd party wins) -- and send me a csv. It's
only going to have FIPS codes, not names of the counties


All races precinct level file -- won't be ready until later in the day on Wednesday
--VISUAL STUDIO -- import process called "precinct level 2016" imports the "allracesbyprecinct" file and then spits out an Excel file that has
the results ready to drop into the "precinct data version 5" file that I'm going to use for the divide analysis (see below)
--queries called precincts2016_qry1 and precincts2016_qry2


Divide analysis:
--Excel file called "ElectionsSince1992_Precincts_MajorRAces.xlsx" is set up to add the 2016 data to the bottom of the file, then pull-down the formulas to complete the work
--Saved view called "allraces_pct_qry2" has the 2016 data ready to export; it has all the votes broken out by the various parties (including third parties) and this will need to be dealt
with in Excel before merging it with the older data; in the "precinct data version 5" file, I created another worksheet with formulas to get this ready to merge (called "prep2016 data") and then there's another 
sheet called "final2016" that pulls automatically from the "prep2016" worksheet in order to put the columns into the right order (and only the columns we want) to put together with the older data in the "main" worksheet
--after making sure everything looks good in "final2016", copy that to the bottom (do a paste-special values) of the "main" worksheet. Then the divide pivot will need to have it's source data reset
and then rerun that pivot table to get new results. 



